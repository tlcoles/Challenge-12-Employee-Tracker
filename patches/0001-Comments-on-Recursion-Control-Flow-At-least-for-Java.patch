From fb619fc2e7708df48f18d4eaf41d03590379b289 Mon Sep 17 00:00:00 2001
From: Tillmann Fiehn <tillmann.fiehn@here.com>
Date: Fri, 4 Nov 2022 22:46:05 +0100
Subject: [PATCH 1/3] Comments on Recursion > Control Flow (At least for
 JavaScript)

---
 lib/questions.js | 36 ++++++++++++++++++++++++++++++++++++
 1 file changed, 36 insertions(+)

diff --git a/lib/questions.js b/lib/questions.js
index d238a58..0bf80b3 100644
--- a/lib/questions.js
+++ b/lib/questions.js
@@ -153,6 +153,42 @@ async function askQs() {
     var enteringData = true;
     var newData = [];
 
+    // you are mixing a while loop with recursive function calls to askQs() and
+    // unfortunately they are weirdly redundant (do they cause double prompts?)
+
+    // i'd rather only use the functional pattern
+
+    let  tasks = [
+        'View all departments',
+        'View all roles',
+        'View all employees',
+        'Add a department',
+        'Add a role',
+        'Add an employee',
+        'Update an employee role',
+        'Exit database'
+    ]
+    inquirer.prompt([
+        {
+            type: 'list',
+            name: 'task',
+            message: 'What would you like to do?',
+            choices: tasks,
+            default: tasks[0],
+        }
+
+    ]).then(data => {
+        switch (data.task) {
+            case 'Exit database':
+                // code here
+                return // no outer loop, so this will end
+            case 'Add a department':
+                // code here
+                // and then recurse
+                askQs()
+        }
+    })
+
     while (enteringData) {
         const queryDB = await inquirer 
         .prompt (
-- 
2.33.0

